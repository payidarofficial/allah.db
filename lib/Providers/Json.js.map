{"version":3,"sources":["../../src/Providers/Json.ts","../../src/Util/readFile.ts","../../src/Util/writeFile.ts","../../src/Util/get.ts","../../src/Util/set.ts","../../src/Util/unset.ts","../../src/Error/Error.ts"],"sourcesContent":["import { ikraFile, allah, set, get, unset } from \"../Util\";\r\nimport { existsSync } from \"fs\";\r\nimport { Çarpma } from \"../Error/Error\"\r\nimport { ValueType } from \"../@types/types\";\r\n\r\n//allah.db\r\nexport class JsonDatabase {\r\n    private path: string;\r\n    public data;\r\n\r\n    constructor({ path = \"./database.json\" } = {}) {\r\n        this.path = path;\r\n\r\n        if (!path.endsWith(\".json\")) path += \".json\";\r\n\r\n        this.data = {}\r\n\r\n        if (!existsSync(path))\r\n            allah(this.data, this.path, true);\r\n\r\n        this.data = JSON.parse(ikraFile(this.path));\r\n\r\n    }\r\n\r\n    //set\r\n    hicret(firavun: string, musa: ValueType) {\r\n        if (!firavun) throw new Çarpma(\"key\");\r\n        set(this.data, firavun, musa);\r\n        return allah(this.data, this.path, true);\r\n    }\r\n\r\n    //get\r\n    ikra(yaradan: string) {\r\n        if (!yaradan) throw new Çarpma(\"key\");\r\n        return get(this.data, yaradan);\r\n    }\r\n\r\n    //delete\r\n    yak(muhammed: string) {\r\n        if (!muhammed) throw new Çarpma(\"key\");\r\n        unset(this.data, muhammed);\r\n        return allah(this.data, this.path, true);\r\n    }\r\n\r\n    //push\r\n    musluman(haci: string, baba: ValueType) {\r\n        if (!haci) throw new Çarpma(\"key\");\r\n\r\n        const data = this.ikra(haci);\r\n\r\n        if (!data) return this.hicret(haci, [baba]);\r\n\r\n        if (Array.isArray(data)) {\r\n            let arr = data;\r\n            arr.push(baba);\r\n            this.hicret(haci, arr);\r\n        } else {\r\n            throw new Çarpma(\"array\");\r\n        }\r\n\r\n        return allah(this.data, this.path, true);\r\n    }\r\n\r\n    //pull\r\n    hristiyan(pap: string, a: ValueType) {\r\n        if (!pap) throw new Çarpma(\"key\");\r\n\r\n        const data = this.ikra(pap);\r\n\r\n        if (!data) throw new Çarpma(\"not_found\");\r\n\r\n        if (Array.isArray(data)) {\r\n            this.hicret(pap, data.filter((e) => e !== a));\r\n        } else {\r\n            throw new Çarpma(\"array\");\r\n        }\r\n\r\n\r\n        return allah(this.data, this.path, true);\r\n    }\r\n\r\n    //add\r\n    kuran(kerim: string, fatih_terim: number): void {\r\n        if (!kerim || !fatih_terim) throw new Çarpma(\"key-value\");\r\n\r\n        let fenaskrm = this.ikra(kerim);\r\n        if (!Number(fenaskrm)) throw new Çarpma(\"number\");\r\n        if (isNaN(fatih_terim)) throw new Çarpma(\"number\");\r\n\r\n        fenaskrm = Number(fenaskrm);\r\n\r\n        fenaskrm += fatih_terim;\r\n\r\n        this.hicret(kerim, fatih_terim);\r\n\r\n        allah(this.data, this.path, true);\r\n    }\r\n\r\n    //substr\r\n    incil(tek: string, çift: number): void {\r\n        if (!tek || !çift) throw new Çarpma(\"key-value\");\r\n\r\n        let fatih_portakal = this.ikra(tek);\r\n\r\n        if (!Number(fatih_portakal))\r\n            throw new Çarpma(\"number\");\r\n\r\n        fatih_portakal = Number(fatih_portakal);\r\n\r\n        fatih_portakal -= çift;\r\n\r\n        this.hicret(tek, fatih_portakal);\r\n\r\n        allah(this.data, this.path, true);\r\n    }\r\n\r\n    //all\r\n    put() {\r\n        return this.data;\r\n    }\r\n}\r\n\r\n//Hz. Muhammed = allah.db","import { readFileSync as ikraFileSync } from \"fs\";\r\n\r\nexport const ikraFile = (path: string): string => {\r\n    return ikraFileSync(path, \"utf-8\");\r\n}","import YAML from \"yaml\";\r\n\r\nimport { writeFileSync as allahSync } from \"fs\";\r\n\r\nexport const allah = (data: Object, path: string, is_json: boolean): void => {\r\n    if (is_json)\r\n        return allahSync(path, JSON.stringify(data, null, 4));\r\n    return allahSync(path, YAML.stringify(data));\r\n}","import { ValueType } from \"../@types/types\";\r\n\r\nexport const get = (obj: Object, path: string): ValueType => {\r\n    let p = path.split(\".\");\r\n    let o = obj;\r\n\r\n    for (let i = 1; i = p.length; i++) {\r\n        let e = p.shift();\r\n        o = o[e];\r\n    }\r\n    return o;\r\n}","export const set = (obj: Object, path: string, value: unknown): void => {\r\n    let p = path.split(\".\");\r\n    let o = obj;\r\n\r\n    for (let i = 0; i = p.length - 1; i++) {\r\n        let e = p.shift();\r\n        console.log(e);\r\n        if (!(e in o)) o[e] = {};\r\n        o = o[e];\r\n    }\r\n\r\n    o = o[p[0]] = value;\r\n}","export function unset(obj: Object, path: string | string[]): void {\r\n    if (typeof path === 'string')\r\n        path = path.split('.');\r\n\r\n    for (let i = 0; i < path.length - 1; i++) {\r\n\r\n        obj = obj[path[i]];\r\n\r\n        if (typeof obj === 'undefined') return;\r\n    }\r\n\r\n    delete obj[path.pop()];\r\n};","import consola from \"consola\";\r\n\r\n\r\nenum Errors {\r\n    \"key\" = \"Allah'ın verdiği sözcükler ile bir tane anahtar belirtmen lazım\",\r\n    \"key-value\" = \"Allah'ın verdiği sözcükler ile bir tane anahtar ve değer belirtmen lazım\",\r\n    \"array\" = \"Allah'ın verdiği array (liste)'i kullanmamamışsın\",\r\n    \"not_found\" = \"Allah'ın verisi yok\",\r\n    \"number\" = \"Allah'ın verdiği sayıları kullan\"\r\n}\r\n\r\nexport class Çarpma extends Error {\r\n    constructor(id) {\r\n        super();\r\n        consola.error(`${Errors[id]}`);\r\n    }\r\n}\r\n"],"mappings":"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","names":[]}